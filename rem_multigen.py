import sys
from subprocess import call
from Bio import SeqIO

multigene = """>U1
ATACTTACCTGGCAGGGGAGATACCATGATCACAAAGGTGGTTCACCCAGGGCGAGGCTCAACCATTGCACTGCGGTTGTGCTGACCCCTGTGAATTCCCCAAATGCGGGAATCTCAACTGCATAATTTGTGGTAGTGGGGGACTGCGTTCGCGCTCTCCCCTC
>U2
ATCGCTTCTCGGCCTTTTGGCTAAGATCAAGTGTAGTATCTGTTCTTATCAGTTTAATATCTGATACGCTCTCTATATGAGGGCTACATATTAAATGGATTTTTAGAACAGGGAGCCAGAACAGGAGCTTGCTCCTTCTGCTCCACGCATCGACCTGGTATTGCAGTACTTCCAGGAGCGGTGCACCT
>U4
ATTCTTTCGCAGAGGCAATATCGTAGCCTATGAGGTCTATCCGAGGCGTGATCGTTGCTGGTTGAAAACTTTAACCAATGCCCCGCCAGGATGACTTGAAATACAGTCAGCCATGGCAATTTTTGATAGTCTCTATCGAGA
>U5
TTACTCGGGTTTCTCTTCATCACGCACAAGCCTTTCGCCTTTTACTAAAGACTTCCGTGGAGAGGAACACCCATGAGTTGAAGATATTTTTGGCAGGCTTTGCCGTTTGGCCGAGCCT
>U6
GCTTGCTTCGGCAAGCGCGTACGCTAAATTGGATACGATACAGAGAAGATTAGCATGGCCCCTGCGCAAGGATGACACGCAAATTCGTGAAGCTACAATGTAGCTT
>H1
GGGCAAGAAGTTTGCACTAATCGTCTTGGCACCCTCCAAGGCCCCCAAGGAAAGGGCTACCGCCCCCCCCAGGAAGGCCGGCCCCAGCGTCGGCGAGATGATCGTCAAGGCCGTCTCGGCATCCAAGGAGAGGAGCGGCGTGTCTCTCGCCGCTCTGAAGAAAGCCCTGGCTGCCGGCGGCTACGACGTGGAGAAGAACAACTCTCGCGTTAAGATCGCCGTCAAGAGTCTCGTCACCAAGGGCGCCCTGGTGCAGAGCAAAGGCACCGGCGCGTMGGGCTCTTTCAAGCTCAACAAGAAACAGGCCGAGGCCAAGAAGAAGCCGGTCAAGAAGGCTGCTCCTAAAGCCAAGAAGCCCGCCGCCAAGAAACCGGCCGCCGCGAAAAAGCCCAAGAAGGTAGCGGCAAAGAAGCCCGTCGCGGCCAAGAAGTCTCCCAAAAAGGCCAAGAAACCGGCAGCGGCCGCGAAGAAGGCAACCAAGAGCCCCAAGAAGGTGAAGAAGCCGGCGGCTCCCAAGAAAGCCACCAAGAGCCCAAAGAAAGCCAAGACTGTCAAGCCCAAAGCGGCCAAGCCCAAGGCGGCGAAGCC
>25S
GAGGAGCCGCTAGGGGGCGGCAGTGAAGCTCCGCTGCGGTACAGGAAGCGGGTGATGGTCGCTGGTGGTCATGTGCAGCAGCCATGGCGGCGTCCTTCAGCAGCCAGAGGAGATTATTAACAACTCTGTGTAGTCAGTTGAATGGTGCACTATGGCTGAACTCTGGAGTGAGGAGCATCCACTCTACAGCAGTCTGTAATAAGAATCGTGCTGCTCGTATCCGTGTGGGTAAAGGGGACCGGCCGATGACGTATGAGGAGGCTCTGCCCCCCCACCAGATCGCTCACAGGAAGGGATGGCTCTCCCATCATACAAGTAATCTGAATGGAGAGCACGGCACTGCAGATCGAACAGTAGAAGACGCCTTCATCCGACGCTTCATATACGGCACGTTTCACAGGTGCCTGGCGAATGAACTGGTTATTAAGCGCAGAGGAAACATGCTGATCATCTCTGCTTTAATGTTCCAGAAGATGCCTCCTCGTAAATATTATTTCTTTATTGGCTACACTGAGGAACTGCTCTCGCACTTCTATAAATGTCCTGTGAAGATGGAGATCCAGACGGTGGAGGAGAAAGTGGTGTATAAATATCTCTAACCTCTCGTGTGTTTGGTTAATGTTTTGTAATGGAGGGAGGATCGGAACTCTGTGTTTCTTTTTCAGTTCAAACTGTTTGTGTTATAAATATCATGTGAATATAAAGGTTTAAAATATTAAA
>18S
GAAAAATAACGATGCAGGTCTCTTTCGAGGCCCTGTAATCGGAATGAACGTATCCTAAACACATGGGTGAGGACCCATTGGAGGGCAAGTCTGGTGCCAGCAGCCGCGGTAATTCCAGCTCCAATAGCGTATATTAAATTTGCTGCAGTTAAAAAGCTCGTAGTTGGACGTCGGGAGTGGGCTGGCGGTCCGCCGCGAGGCGAGCTACCGCCTGTCCCAGACCCTGCCTCCCGGTGCCCCCCGGATGCCCTTGGTTGGGTGTCCGGTCCTCAGGGGTCCGGAGCGTTTACTTTGAAAAAATCAGAGTGTTCAAAGCGGGCACCCACTCGCCTGAATGCCTGAGCTAGGAATAATGGAATAGGACTCCGGTTCTATTTTGTGGGTTTCCTGAACCAGGGCCATGATTAAGAGGGACGGCCGGGGGCATTCGTATTGCGCCGCTAGAGGTGAAATTCTTGGACCGGCGCAAGACGGACGAAAGCGAAAGCATTTGCCAAGAATGTTTTCATTAATCAAGAACGAAAGTCGGAGG
>5S
GCTTACGGCCATACCACCCTGAGAACGCCCGATCTCGTCTGATCTCGGAAGCTAAGCAGGGTCGGGCCTGGTTAGTACTTGGATGGGAGACCGCCTGGGAATACCAGGTGCTGTAAGCT"""

db = open('database.fasta','w')
db.write(multigene)
db.close()

try:
	query = sys.argv[1]
except:
	query = input('insert the satellitome[fasta]: ')

call('makeblastdb -in database.fasta -dbtype nucl', shell=True)
call('blastn -db database.fasta -query %s -outfmt 6 -out resultado_multgen.txt'%(query), shell=True)
call('rm database.fasta*', shell=True)

mtgen_list = []

resultado = open('resultado_multgen.txt','r')
r = resultado.readlines()

log = open('log.txt','w')

for lines in r:
	mtgen_list.append(lines.split()[0])
	log.write(lines.split()[0]+'\t'+lines.split()[1]+'\n')

resultado.close()

sat = SeqIO.parse(open(query),'fasta')

seqs = {}

for s in sat:
	seqs[s.id]  = str(s.seq)

final = {}

for i in mtgen_list:
	for x,y in seqs.items():
		if x != i: 
			final[x] = y

fasta = open(query.replace('.fasta','_without_multigen.fasta'),'w')

for x,y in final.items():
	fasta.write('>'+str(x)+'\n'+str(y)+'\n')

call('rm resultado_multgen.txt',shell=True)